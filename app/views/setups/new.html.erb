<div class="max-w-2xl mx-auto space-y-4">
  <h1 class="text-xl font-bold">Losuj setup</h1>

  <div class="grid grid-cols-2 gap-4">
    <label class="block">Liczba graczy
      <input id="pc" type="number" min="1" max="6" value="4" class="border p-2 rounded w-24">
    </label>
    <label class="block">Ile postaci (domyślnie 6)
      <input id="cc" type="number" min="1" max="10" value="6" class="border p-2 rounded w-24">
    </label>
  </div>

  <!-- ważne: type="button", żeby nie triggerować submit -->
  <button id="roll" type="button" class="btn-primary">Losuj setup</button>

  <div id="card" class="hidden rounded-2xl shadow bg-white border">
    <div class="p-4 space-y-4">
      <div>
        <div id="variantTitle" class="text-lg font-bold"></div>
        <div id="variantSub" class="text-sm text-slate-600"></div>
      </div>

      <div>
        <h3 class="font-semibold mb-1">Postacie</h3>
        <ul id="chars" class="list-disc pl-5 grid md:grid-cols-2 gap-1"></ul>
      </div>

      <div>
        <h3 class="font-semibold mb-1">Worek (setup)</h3>
        <table class="w-full text-sm"><tbody id="bag"></tbody></table>
      </div>
    </div>
  </div>

  <div id="err" class="hidden alert-error"></div>
</div>

<script type="module">
  const $ = s => document.querySelector(s)
  const btn   = $('#roll')
  const card  = $('#card')
  const errEl = $('#err')
  const chars = $('#chars')
  const bag   = $('#bag')
  const vTitle= $('#variantTitle')
  const vSub  = $('#variantSub')

  function showError(msg) {
    errEl.textContent = msg || "Wystąpił błąd."
    errEl.classList.remove('hidden')
    card.classList.add('hidden')
    errEl.scrollIntoView({ behavior: "smooth", block: "center" })
  }
  function hideError() {
    errEl.textContent = ""
    errEl.classList.add('hidden')
  }

  btn.addEventListener('click', async () => {
    hideError()
    card.classList.add('hidden')
    chars.innerHTML = ""
    bag.innerHTML = ""

    // bezpieczna konwersja na liczby całkowite
    const pc = Math.max(1, parseInt(document.getElementById('pc').value, 10) || 4)
    const cc = Math.max(1, parseInt(document.getElementById('cc').value, 10) || 6)

    // walidacja po stronie klienta – nie uderzaj do API, gdy warunek oczywiście błędny
    if (pc > cc) {
      showError("Liczba graczy nie może być większa niż liczba postaci")
      return
    }

    // stan ładowania
    const prevText = btn.textContent
    btn.textContent = "Losuję…"
    btn.disabled = true

    try {
      const res  = await fetch('<%= setups_path(format: :json) %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ player_count: pc, char_count: cc })
      })

      let data = {}
      const ct = res.headers.get('Content-Type') || ''
      if (ct.includes('application/json')) {
        try { data = await res.json() } catch (_) { data = {} }
      } else {
        // fallback gdyby backend zwrócił non-JSON
        data = { error: `Błąd (${res.status})` }
      }

      if (!res.ok) {
        showError(data.error || `Błąd (${res.status}) podczas losowania.`)
        return
      }

      // sukces
      vTitle.textContent = data.variant?.name || "Wariant"
      vSub.textContent   = `${pc} graczy • ${cc} postaci`

      ;(data.characters || []).forEach(c => {
        const li = document.createElement('li')
        li.textContent = c.name
        chars.appendChild(li)
      })

      const entries = Object.entries(data.setup || {})
      if (entries.length === 0) {
        bag.innerHTML = "<tr><td class='py-1' style='color:#6b7280'>Brak danych setupu</td></tr>"
      } else {
        entries.forEach(([k, v]) => {
          const tr = document.createElement('tr')
          tr.innerHTML = `<td class="py-1 pr-2" style="font-weight:600">${k}</td><td class="py-1">${v}</td>`
          bag.appendChild(tr)
        })
      }

      card.classList.remove('hidden')
    } catch (e) {
      showError("Brak połączenia z serwerem.")
      console.error(e)
    } finally {
      btn.textContent = prevText
      btn.disabled = false
    }
  })
</script>
